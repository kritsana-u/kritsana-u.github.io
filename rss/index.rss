<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Technical Notes</title><description>Thoughts, stories and ideas.</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>Technical Notes</title><link>http://localhost:2368/</link></image><generator>Ghost 3.1</generator><lastBuildDate>Thu, 05 Dec 2019 13:22:21 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Setup LINE as Federation Identity Provider of AWS Cognito User Pool</title><description>&lt;h3 id="step-1-create-openid-connect"&gt;Step 1 – Create OpenID Connect &lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Sign in to AWS account and go to Cognito service&lt;/li&gt;&lt;li&gt;Choose the user pool that you need to allow to sign in with LINE&lt;/li&gt;&lt;li&gt;On the left panel, choose &lt;strong&gt;Identity providers&lt;/strong&gt; under &lt;strong&gt;Federation&lt;/strong&gt; and choose &lt;strong&gt;OpenID Connect&lt;/strong&gt; on the right. The OpenID Connect form will&lt;/li&gt;&lt;/ul&gt;</description><link>http://localhost:2368/setup-line-as-federation-identity-provider/</link><guid isPermaLink="false">5de8fb15275d050a0d2591c1</guid><dc:creator>Kritsana Uttamang</dc:creator><pubDate>Thu, 05 Dec 2019 13:14:06 GMT</pubDate><content:encoded>&lt;h3 id="step-1-create-openid-connect"&gt;Step 1 – Create OpenID Connect &lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Sign in to AWS account and go to Cognito service&lt;/li&gt;&lt;li&gt;Choose the user pool that you need to allow to sign in with LINE&lt;/li&gt;&lt;li&gt;On the left panel, choose &lt;strong&gt;Identity providers&lt;/strong&gt; under &lt;strong&gt;Federation&lt;/strong&gt; and choose &lt;strong&gt;OpenID Connect&lt;/strong&gt; on the right. The OpenID Connect form will appear.&lt;/li&gt;&lt;/ul&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2019/12/Screen-Shot-2562-12-05-at-19.43.06.png" class="kg-image"&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;Enter "LINE" as the Provider &lt;/li&gt;&lt;li&gt;Enter Client ID and Client secret obtained from LINE&lt;/li&gt;&lt;li&gt;Choose "Get" as &lt;strong&gt;Attributes request method&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Enter "profile openid email" as &lt;strong&gt;Authorize scope&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Enter "&lt;a href="https://access.line.me"&gt;https://access.line.me&lt;/a&gt;" as Issuer and leave Identifiers empty&lt;/li&gt;&lt;/ul&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2019/12/Screen-Shot-2562-12-05-at-19.58.30.png" class="kg-image"&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;Click &lt;strong&gt;Run discovery&lt;/strong&gt; button on the right of &lt;strong&gt;Issuer&lt;/strong&gt; and you will see that the &lt;u&gt;discovery returns no result&lt;/u&gt; and there are additional fields show up to you. Don't worry. We just need to fill them up manually.&lt;/li&gt;&lt;li&gt;Enter "&lt;a href="https://access.line.me/oauth2/v2.1/authorize"&gt;https://access.line.me/oauth2/v2.1/authorize&lt;/a&gt;" as &lt;strong&gt;Authorization endpoint&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Enter "&lt;a href="https://api.line.me/oauth2/v2.1/token"&gt;https://api.line.me/oauth2/v2.1/token&lt;/a&gt;" as &lt;strong&gt;Token endpoint&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Enter "&lt;a href="https://api.line.me/v2/profile"&gt;https://api.line.me/v2/profile&lt;/a&gt;" as &lt;strong&gt;Userinfo endpoint&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Enter "&lt;a href="https://api.line.me/oauth2/v2.1/certs"&gt;https://api.line.me/oauth2/v2.1/certs&lt;/a&gt;" as &lt;strong&gt;Jwks uri&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;Click &lt;strong&gt;Create provider&lt;/strong&gt; button&lt;/li&gt;&lt;/ul&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2019/12/Screen-Shot-2562-12-05-at-19.59.23.png" class="kg-image"&gt;&lt;/figure&gt;&lt;h3 id="step-2-setup-attribute-mapping"&gt;Step 2 – Setup Attribute Mapping&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;On the left panel, choose &lt;strong&gt;Attribute mapping&lt;/strong&gt; under &lt;strong&gt;Federation&lt;/strong&gt; and choose &lt;strong&gt;OIDC &lt;/strong&gt;tab &lt;/li&gt;&lt;li&gt;Select LINE in the drop list of OIDC tab.&lt;/li&gt;&lt;li&gt;Add the OIDC attribute mapping as shown in the following picture&lt;/li&gt;&lt;/ul&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2019/12/Screen-Shot-2562-12-05-at-20.07.48.png" class="kg-image"&gt;&lt;/figure&gt;&lt;h3 id="what-s-next"&gt;What's next?&lt;/h3&gt;&lt;p&gt;Here I just show the step of setting up LINE as federation identity provider of the AWS Cognito user pool. You need to set up App integration to allow the application with the App Client ID to sign in with LINE.&lt;/p&gt;</content:encoded></item><item><title>Setup AWS Single Sign-On for External AWS Account</title><description>&lt;p&gt;This writing is about how to connect the AWS account that is not a part of the AWS Organizations with AWS Single Sign-On (AWS SSO).&lt;/p&gt;&lt;h3 id="problem"&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;My company is a software professional service company that provides the cloud solution (mostly) on AWS. Many clients have their own AWS account and&lt;/p&gt;</description><link>http://localhost:2368/setup-aws-single-sign-on-for-external-aws-account/</link><guid isPermaLink="false">5de8eaa0275d050a0d259182</guid><dc:creator>Kritsana Uttamang</dc:creator><pubDate>Thu, 05 Dec 2019 11:45:00 GMT</pubDate><content:encoded>&lt;p&gt;This writing is about how to connect the AWS account that is not a part of the AWS Organizations with AWS Single Sign-On (AWS SSO).&lt;/p&gt;&lt;h3 id="problem"&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;My company is a software professional service company that provides the cloud solution (mostly) on AWS. Many clients have their own AWS account and provided us IAM to access to their AWS resources. Now, I have many accounts that switching between them is painful.&lt;/p&gt;&lt;p&gt;According to the AWS document at link below,&lt;br&gt;&lt;a href="https://medium.com/r/?url=https%3A%2F%2Fdocs.aws.amazon.com%2Fsinglesignon%2Flatest%2Fuserguide%2Fmanage-your-accounts.html"&gt;https://docs.aws.amazon.com/singlesignon/latest/userguide/manage-your-accounts.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;It say:&lt;/p&gt;&lt;blockquote&gt;“You can also connect an AWS account that is not part of your organization by setting up the account as a custom SAML application in AWS SSO. In this scenario, you provision and manage the IAM roles and trust relationships that are required to enable SSO access. For more information on how to do this, see &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/samlapps.html#addconfigcustomapp" rel="noopener"&gt;Add and Configure a Custom SAML 2.0 Application&lt;/a&gt;.”&lt;/blockquote&gt;&lt;p&gt;Unfortunately, the document does not provide the setup steps for that (at least on the day I wrote this article). I kept searching on Google and I found that someone share such information. I followed the steps, and it does not work. After trial and error for a while, finally I can make it :)&lt;/p&gt;&lt;h3 id="step-1-create-aws-sso-application-"&gt;Step 1 – Create AWS SSO Application:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Sign in to your AWS master account to which you SSO account belong.&lt;/li&gt;&lt;li&gt;Go to AWS Single Sign-On service and select “&lt;strong&gt;Applications&lt;/strong&gt;” from the sidebar on the left and you will see the list of AWS SSO applications you have.&lt;/li&gt;&lt;li&gt;Click “&lt;strong&gt;Add a new application&lt;/strong&gt;” button. It brings you to the “&lt;strong&gt;Add New Application&lt;/strong&gt;” page.&lt;/li&gt;&lt;li&gt;Scroll down to the bottom of the page and you will see “&lt;strong&gt;Show more applications&lt;/strong&gt;”. Click on it until you see “&lt;strong&gt;External AWS Account&lt;/strong&gt;”. Then, select it and click “&lt;strong&gt;Add application&lt;/strong&gt;” button.&lt;/li&gt;&lt;/ul&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2019/12/Screen-Shot-2562-12-03-at-11.58.02.png" class="kg-image"&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;Enter “&lt;strong&gt;Display name&lt;/strong&gt;” and “&lt;strong&gt;Description&lt;/strong&gt;” of the application. Leave others with the default values (the default value of “&lt;strong&gt;Application ACS URL&lt;/strong&gt;” should be “&lt;em&gt;https://signin.aws.amazon.com/saml&lt;/em&gt;” and the default value of “&lt;strong&gt;Application SAML audience&lt;/strong&gt;” should be “&lt;em&gt;urn:amazon:webservices&lt;/em&gt;”. Then, click “&lt;strong&gt;Save changes&lt;/strong&gt;” button. Now, you should see the detail of the application you just created with “&lt;em&gt;Configuration for External AWS Account has been saved&lt;/em&gt;” message on the top.&lt;/li&gt;&lt;li&gt;Under the “&lt;strong&gt;AWS SSO metadata&lt;/strong&gt;” section, click “Download” link on the right of “&lt;strong&gt;AWS SSO SAML metadata&lt;/strong&gt;”. It will download the SAML metadata file (with xml extension) to you machine.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="step-2-setup-identity-provider-on-target-aws-account"&gt;Step 2 – Setup identity provider on target AWS account&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Now, sign in to the target AWS account to which you need to connect.&lt;/li&gt;&lt;li&gt;Go to AWS IAM service and select “&lt;strong&gt;Identity providers&lt;/strong&gt;” from the sidebar on the left. It located under “&lt;strong&gt;Access management&lt;/strong&gt;” group. Then, click “&lt;strong&gt;Create Provider&lt;/strong&gt;” button. It will bring you to the first step of “&lt;strong&gt;Create Provider&lt;/strong&gt;” page, which is “&lt;strong&gt;Configure Provider&lt;/strong&gt;”&lt;/li&gt;&lt;li&gt;Choose “&lt;strong&gt;SAML&lt;/strong&gt;” as “&lt;strong&gt;Provider Type&lt;/strong&gt;” and enter “&lt;strong&gt;Provider Name&lt;/strong&gt;”. Then, click “&lt;strong&gt;Choose File&lt;/strong&gt;” button of “&lt;strong&gt;Metadata Document&lt;/strong&gt;” and select the SAML metadata file that you have downloaded (&lt;strong&gt;AWS SSO metadata&lt;/strong&gt;). Click “&lt;strong&gt;Next Step&lt;/strong&gt;” button. Click “&lt;strong&gt;Create&lt;/strong&gt;” button when you see it on “&lt;strong&gt;Verify Provider Information&lt;/strong&gt;” step. It will bring you back to the identity providers page and you should see your created one.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="step-3-create-role-for-the-identity-provider"&gt;Step 3 – Create role for the identity provider&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Select “Roles” on the left sidebar (under “&lt;strong&gt;Access management&lt;/strong&gt;” group as well). Click “&lt;strong&gt;Create Role&lt;/strong&gt;” button and it will bring you to “&lt;strong&gt;Create role&lt;/strong&gt;” page.&lt;/li&gt;&lt;li&gt;Under “&lt;strong&gt;Select type of trusted entity&lt;/strong&gt;” section, choose “&lt;strong&gt;SAML 2.0 federation&lt;/strong&gt;”.&lt;/li&gt;&lt;/ul&gt;&lt;figure class="kg-card kg-image-card"&gt;&lt;img src="http://localhost:2368/content/images/2019/12/Screen-Shot-2562-12-03-at-13.00.47.png" class="kg-image"&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;Under “&lt;strong&gt;Choose a SAML 2.0 provider&lt;/strong&gt;” section, select identity provider you have just created.&lt;/li&gt;&lt;li&gt;Choose “&lt;strong&gt;Allow programmatic access only&lt;/strong&gt;” to allow SSO account to access to the AWS account with command line only. Or choose “&lt;strong&gt;Allow programmatic and AWS Management Console access&lt;/strong&gt;”, if you want to allow SSO account to access to this AWS account with both command line and AWS management console. Then, click “&lt;strong&gt;Next: Permission&lt;/strong&gt;” button.&lt;/li&gt;&lt;li&gt;Choose or create a policy for this role and click “&lt;strong&gt;Next: Tags&lt;/strong&gt;” button.&lt;/li&gt;&lt;li&gt;Enter tags if need and click “&lt;strong&gt;Next: Review&lt;/strong&gt;”.&lt;/li&gt;&lt;li&gt;Enter “&lt;strong&gt;Role name&lt;/strong&gt;”, “&lt;strong&gt;Role description&lt;/strong&gt;” and click “&lt;strong&gt;Create role&lt;/strong&gt;” button.&lt;/li&gt;&lt;li&gt;Make sure that you note the &lt;strong&gt;ARN&lt;/strong&gt; of both identity provider and the role that you created, before go to the next step.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id="step-4-update-sso-application-in-master-account"&gt;Step 4 – Update SSO Application in master account&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Go back to the AWS master account to continue configuring the SSO application. (Sign in to your master account and go to AWS Single Sign-On service. Select “&lt;strong&gt;Applications&lt;/strong&gt;” on the left sidebar and click on the application that you created). In the application detail page, choose “&lt;strong&gt;Attribute mapping&lt;/strong&gt;” tab. You should see two existing attributes which are: “&lt;strong&gt;&lt;em&gt;Subject | ${user:email} | persistent&lt;/em&gt;&lt;/strong&gt;” and “&lt;strong&gt;&lt;em&gt;https://aws.amazon.com/SAML/Attributes/RoleSessionName | ${user:email} | unspecified&lt;/em&gt;&lt;/strong&gt;”&lt;/li&gt;&lt;li&gt;Click “&lt;strong&gt;Add new attribute mapping&lt;/strong&gt;” and enter &lt;em&gt;https://aws.amazon.com/SAML/Attributes/Role &lt;/em&gt;as “&lt;strong&gt;User attribute in the application&lt;/strong&gt;”. In “&lt;strong&gt;Maps to this string value of user attribute in AWS SSO&lt;/strong&gt;” enter ARN of the role follow by comma and then follow by the ARN of identity provider (make sure there is no whitespace) e.g. “&lt;em&gt;arn:aws:iam::111111111111:role/MyRoleName,arn:aws:iam::111111111111:saml-provider/MyIdentityProviderName&lt;/em&gt;”. Choose “&lt;strong&gt;unspecified&lt;/strong&gt;” for the “&lt;strong&gt;Format&lt;/strong&gt;” and click “&lt;strong&gt;Save changes&lt;/strong&gt;”.&lt;/li&gt;&lt;li&gt;Click “&lt;strong&gt;Assigned users&lt;/strong&gt;” tab and click “&lt;strong&gt;Assign users&lt;/strong&gt;” button. It will let you choose the SSO users which you allow to access to the target AWS account. Click the “&lt;strong&gt;Assign users&lt;/strong&gt;” button when done.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Oh yeah!, we did it. Now, you can sign in with your SSO user at the user portal URL. You should see a new application on the list. Click on it, it will sign you in to the target AWS account.&lt;/p&gt;</content:encoded></item></channel></rss>